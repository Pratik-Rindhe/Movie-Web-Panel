{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nimap Task\\\\Movie-Task-Nimap-master\\\\src\\\\components\\\\TopRatedPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, createElement as _createElement } from \"react\";\nimport { TOP_RATED_URL } from \"../Service/Api\";\nimport Header from \"./Header\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TopRatedPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    getAllData();\n  }, [currentPage, searchQuery]);\n  async function getAllData() {\n    try {\n      let url = `${TOP_RATED_URL}&page=${currentPage}`;\n      if (searchQuery.trim() !== \"\") {\n        url = `${TOP_RATED_URL}&query=${encodeURIComponent(searchQuery)}&page=${currentPage}`;\n      }\n      const apiData = await fetch(url);\n      if (!apiData.ok) {\n        throw new Error(\"Failed to fetch top-rated movies.\");\n      }\n      const res = await apiData.json();\n      setData(res.results || []);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  const handleSearch = query => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset to the first page when a new search is performed\n  };\n  const goToNextPage = () => {\n    setCurrentPage(prev => prev + 1);\n  };\n  const goToPreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prev => prev - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: data.length > 0 ? data.map(item => /*#__PURE__*/_createElement(Card, {\n        ...item,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 30\n        }\n      })) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TopRatedPage, \"HUwIwgquzgt2GSq3gJR8uIDdEbg=\");\n_c = TopRatedPage;\nexport default TopRatedPage;\nvar _c;\n$RefreshReg$(_c, \"TopRatedPage\");","map":{"version":3,"names":["React","useEffect","useState","createElement","_createElement","TOP_RATED_URL","Header","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","TopRatedPage","_s","data","setData","searchQuery","setSearchQuery","currentPage","setCurrentPage","getAllData","url","trim","encodeURIComponent","apiData","fetch","ok","Error","res","json","results","error","console","handleSearch","query","goToNextPage","prev","goToPreviousPage","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","item","key","id","__self","__source","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/Nimap Task/Movie-Task-Nimap-master/src/components/TopRatedPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TOP_RATED_URL } from \"../Service/Api\";\nimport Header from \"./Header\";\nimport Card from \"../components/Card\";\n\nconst TopRatedPage = () => {\n  const [data, setData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    getAllData();\n  }, [currentPage, searchQuery]);\n\n  async function getAllData() {\n    try {\n      let url = `${TOP_RATED_URL}&page=${currentPage}`;\n      if (searchQuery.trim() !== \"\") {\n        url = `${TOP_RATED_URL}&query=${encodeURIComponent(searchQuery)}&page=${currentPage}`;\n      }\n      const apiData = await fetch(url);\n      if (!apiData.ok) {\n        throw new Error(\"Failed to fetch top-rated movies.\");\n      }\n      const res = await apiData.json();\n      setData(res.results || []);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset to the first page when a new search is performed\n  };\n\n  const goToNextPage = () => {\n    setCurrentPage((prev) => prev + 1);\n  };\n\n  const goToPreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage((prev) => prev - 1);\n    }\n  };\n\n  return (\n    <>\n      <Header onSearch={handleSearch} />\n      <div className=\"cards-container\">\n        {data.length > 0 ? (\n          data.map((item) => <Card {...item} key={item.id} />)\n        ) : (\n          <p>No movies found.</p>\n        )}\n      </div>\n      <div className=\"pagination\">\n        <button onClick={goToPreviousPage} disabled={currentPage === 1}>\n          Previous\n        </button>\n        <span>Page {currentPage}</span>\n        <button onClick={goToNextPage}>Next</button>\n      </div>\n    </>\n  );\n};\n\nexport default TopRatedPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAAC,aAAA,IAAAC,cAAA,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACdmB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACF,WAAW,EAAEF,WAAW,CAAC,CAAC;EAE9B,eAAeI,UAAUA,CAAA,EAAG;IAC1B,IAAI;MACF,IAAIC,GAAG,GAAG,GAAGhB,aAAa,SAASa,WAAW,EAAE;MAChD,IAAIF,WAAW,CAACM,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC7BD,GAAG,GAAG,GAAGhB,aAAa,UAAUkB,kBAAkB,CAACP,WAAW,CAAC,SAASE,WAAW,EAAE;MACvF;MACA,MAAMM,OAAO,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;MAChC,IAAI,CAACG,OAAO,CAACE,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;MACtD;MACA,MAAMC,GAAG,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAC,CAAC;MAChCd,OAAO,CAACa,GAAG,CAACE,OAAO,IAAI,EAAE,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EAEA,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9BjB,cAAc,CAACiB,KAAK,CAAC;IACrBf,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzBhB,cAAc,CAAEiB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAInB,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAAEiB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IACpC;EACF,CAAC;EAED,oBACE3B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA,CAACH,MAAM;MAACiC,QAAQ,EAAEN;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClClC,OAAA;MAAKmC,SAAS,EAAC,iBAAiB;MAAAN,QAAA,EAC7BxB,IAAI,CAAC+B,MAAM,GAAG,CAAC,GACd/B,IAAI,CAACgC,GAAG,CAAEC,IAAI,iBAAK3C,cAAA,CAACG,IAAI;QAAA,GAAKwC,IAAI;QAAEC,GAAG,EAAED,IAAI,CAACE,EAAG;QAAAC,MAAA;QAAAC,QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,CAAC,gBAEpDlC,OAAA;QAAA6B,QAAA,EAAG;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACvB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNlC,OAAA;MAAKmC,SAAS,EAAC,YAAY;MAAAN,QAAA,gBACzB7B,OAAA;QAAQ2C,OAAO,EAAEf,gBAAiB;QAACgB,QAAQ,EAAEnC,WAAW,KAAK,CAAE;QAAAoB,QAAA,EAAC;MAEhE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlC,OAAA;QAAA6B,QAAA,GAAM,OAAK,EAACpB,WAAW;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/BlC,OAAA;QAAQ2C,OAAO,EAAEjB,YAAa;QAAAG,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC9B,EAAA,CA5DID,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AA8DlB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}